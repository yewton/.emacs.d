
~org-goto (C-j)~ は大変便利。

#+BEGIN_SRC emacs-lisp
  (use-package org
    :bind (("C-c l" . org-store-link)
           ("C-c b" . org-iswitchb))
    :config
    (defvar my-org-journal-directory (expand-file-name "journal/" org-directory))
    (setq org-adapt-indentation nil
          org-agenda-files `(,org-directory)
          org-default-notes-file (expand-file-name "notes.org" org-directory))
    ;; cf. http://emacs.stackexchange.com/a/13828
    (setcar (nthcdr 2 org-emphasis-regexp-components) " \t\r\n")
    (org-set-emph-re 'org-emphasis-regexp-components org-emphasis-regexp-components)
    (defun my-org-mode-hook ()
      (set (make-local-variable 'system-time-locale) "C")
      (org-display-inline-images)
      (org-bullets-mode 1)
      (setq org-fontify-whole-heading-line t))
    (add-hook 'org-mode-hook #'my-org-mode-hook))

  (use-package org-agenda
    :bind (("C-c a" . org-agenda))
    :config
    (setq org-agenda-custom-commands
          `(("j" . "JOURNAL")
            ("ja" "Journal Agenda" agenda nil
             ((org-agenda-files (list ,my-org-journal-directory))))
            ("jt" "Journal TODO" todo nil
             ((org-agenda-files (list ,my-org-journal-directory))))
            ("js" "Journal Search" search nil
             ((org-agenda-files (list ,my-org-journal-directory)))))))

  (use-package org-faces
    :defer t
    :config
    (set-face-attribute 'org-table nil :inherit 'fixed-pitch))

  (use-package ox-html
    :defer t
    :config
    (setq org-html-htmlize-output-type 'css))

  (use-package ox
    :defer t
    :config
    (setq org-export-allow-bind-keywords t
          org-export-date-timestamp-format "%M"))

  (use-package org-present
    :defer t
    :config
    (defun my-org-present-mode-hook ()
      (org-present-big)
      (org-display-inline-images)
      (org-present-hide-cursor)
      (org-present-read-only)
      (linum-mode -1))

    (defun my-org-present-mode-quit-hook ()
      (org-present-small)
      (org-remove-inline-images)
      (org-present-show-cursor)
      (org-present-read-write)
      (linum-mode +1))

    (add-hook 'org-present-mode-hook #'my-org-present-mode-hook)
    (add-hook 'org-present-mode-quit-hook #'my-org-present-mode-quit-hook))

  (use-package helm-org
    :bind (("C-c c" . helm-org-capture-templates))
    :config
    (setq org-capture-templates
          `(("j" "Journal"
             entry
             (file+datetree
              ,(expand-file-name
                (format (format-time-string "journal-%Y-%%s.org") (system-name))
                my-org-journal-directory))
             "* %?\n%T\n%i"
             :prepend t
             :empty-lines 1
             :jump-to-captured t))))
#+END_SRC

**** ob-plantuml

org-mode 内で図を確認しながら plantuml を書くことが出来ます。

=puml= でスニペット展開出来るようにしてあります。

#+BEGIN_SRC emacs-lisp
  (use-package ob-plantuml
    :config
    (add-to-list 'org-babel-load-languages '(plantuml . t))
    ;; el-get では自動的に jar を DL してパスをセットするところまでやってくれる!
    (setq org-plantuml-jar-path plantuml-jar-path)
    ;; plantuml 実行後に画像をすぐ表示してほしい
    (add-hook 'org-babel-after-execute-hook #'org-display-inline-images))
#+END_SRC

**** ox-taskjuggler

=tj= でスニペット展開出来るようにしてあります。

#+BEGIN_SRC emacs-lisp
  (use-package ox-taskjuggler
    :init
    (add-to-list 'org-export-backends 'taskjuggler)
    :config
    ;; http://www.taskjuggler.org/tj3/manual/resource.html
    (setq org-taskjuggler-valid-resource-attributes '(
                                                      booking
                                                      chargeset
                                                      efficiency
                                                      email
                                                      fail
                                                      flags
                                                      journalentry
                                                      leaveallowance
                                                      leaves
                                                      limits
                                                      managers
                                                      purge
                                                      rate
                                                      resource
                                                      shifts
                                                      supplement
                                                      vacation
                                                      warn
                                                      workinghours
                                                      )
          org-taskjuggler-valid-report-attributes '(
                                                    balance
                                                    caption
                                                    columns
                                                    definitions
                                                    footer
                                                    formats
                                                    header
                                                    headline
                                                    hideresource
                                                    hidetask
                                                    loadunit
                                                    period
                                                    sorttasks
                                                    timeformat
                                                    timeformat
                                                    )
          org-taskjuggler-target-version 3.6))
#+END_SRC

**** org-ac

#+BEGIN_SRC emacs-lisp
  (use-package org-ac
    :config
    (org-ac/config-default))
#+END_SRC
