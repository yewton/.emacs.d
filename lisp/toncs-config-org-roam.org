#+TITLE: org-roam
#+PROPERTY: header-args:emacs-lisp :tangle yes :comments both

#+begin_src emacs-lisp :comments no :padline no
;;; toncs-config-org-roam.el -*- lexical-binding: t -*-
#+end_src

#+begin_src emacs-lisp
(eval-when-compile (defvar org-roam-v2-ack t))
(require 'org-roam)
(require 'org-roam-dailies)
(require 'org-roam-protocol)
(require 'counsel)
(require 'no-littering)

(defun toncs-org-roam-search ()
  (interactive)
  (counsel-rg nil org-roam-directory "" "[Roam]"))

(defun toncs-config-org-roam-configure ()
  (delight 'org-roam-mode nil "org-roam")
  (setq org-roam-directory (expand-file-name "roam" org-directory))
  (setq org-roam-db-location (no-littering-expand-var-file-name "org-roam.db"))
  ;; Syncthing のバージョン管理用ファイルとコンフリクトファイルを無視したい
  (setq org-roam-file-exclude-regexp "\\(~[[:digit:]]+-[[:digit:]]+\\|\\.sync-conflict\.\\)")

  (setq org-roam-capture-templates
        '(("d" "default" plain "%?"
           :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
                              "#+setupfile: ../roam-setup.org\n#+title: ${title}\n\n* Inbox\n")
           :unnarrowed t)))
  (setq org-roam-dailies-capture-templates
        '(("d" "default" entry
         "* %?"
         :if-new (file+head "%<%Y-%m-%d>.org"
                            "#+setupfile: ../../roam-setup.org\n#+title: %<%Y-%m-%d>\n\n* Notes\n"))))
  (setq org-roam-capture-ref-templates
        '(("r" "ref" plain
           :if-new (file+head "${slug}.org"
                              "#+setupfile: ../roam-setup.org\n#+title: ${title}\n\n* Inbox\n")
           :unnarrowed t)))
  (general-def org-mode-map
    "C-c n l" #'org-roam-buffer-toggle)
  (org-roam-setup))
#+end_src

#+begin_src emacs-lisp :comments no
(provide 'toncs-config-org-roam)
;;; toncs-config-org-roam.el ends here
#+end_src
