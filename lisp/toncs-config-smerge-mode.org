#+TITLE: smerge-mode
#+setupfile: ../setup.org

#+begin_src emacs-lisp :comments no :padline no
;;; toncs-config-smerge-mode.el -*- lexical-binding: t -*-
#+end_src

#+begin_src emacs-lisp
(require 'smerge-mode)
(require 'hydra)
(require 'general)

;; see https://github.com/alphapapa/unpackaged.el/#smerge-mode
(defhydra hydra-smerge
  (:color pink :hint nil :post (smerge-auto-leave))
  "
^Move^       ^Keep^               ^Diff^                 ^Other^
^^-----------^^-------------------^^---------------------^^-------
_n_ext       _b_ase               _<_: upper/base        _C_ombine
_p_rev       _u_pper              _=_: upper/lower       _r_esolve
^^           _l_ower              _>_: base/lower        _k_ill current
^^           _a_ll                _R_efine
^^           _RET_: current       _E_diff
"
  ("n" smerge-next)
  ("p" smerge-prev)
  ("b" smerge-keep-base)
  ("u" smerge-keep-upper)
  ("l" smerge-keep-lower)
  ("a" smerge-keep-all)
  ("RET" smerge-keep-current)
  ("\C-m" smerge-keep-current)
  ("<" smerge-diff-base-upper)
  ("=" smerge-diff-upper-lower)
  (">" smerge-diff-base-lower)
  ("R" smerge-refine)
  ("E" smerge-ediff)
  ("C" smerge-combine-with-next)
  ("r" smerge-resolve)
  ("k" smerge-kill-current)
  ("ZZ" (lambda ()
          (interactive)
          (save-buffer)
          (bury-buffer))
   "Save and bury buffer" :color blue)
  ("q" nil "cancel" :color blue))

(defun toncs-config-smerge-mode-configure ()
  (general-def smerge-mode-map
    "C-c ^ h" #'hydra-smerge/body))
#+end_src

#+begin_src emacs-lisp :comments no
(provide 'toncs-config-smerge-mode)
;;; toncs-config-smerge-mode.el ends here
#+end_src
